# I can go straight into selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
plot_data <- adp_data %>%
select('area_name','year','numerator') %>%
rename(percentage = 'numerator',NHS = 'area_name') %>%
head(plot_data)
# There are no missing values
# I can go straight into selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
plot_data <- adp_data %>%
select('area_name','year','numerator') %>%
rename(percentage = 'numerator',NHS = 'area_name')
# There are no missing values
# I can go straight into selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
plot_data <- adp_data %>%
select('area_name','year','numerator') %>%
rename(percentage = 'numerator',NHS = 'area_name')
head(plot_data)
# There are no missing values
# I can go straight into selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
plot_data <- adp_data %>%
select('area_name','year','numerator') %>%
rename(percentage = 'numerator',NHS = 'area_name') %>%
filter(NHS !='Scotland')
head(plot_data)
# There are no missing values
# I can go straight into selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
plot_data <- adp_data %>%
select('area_name','year','numerator') %>%
rename(percentage = 'numerator',NHS = 'area_name') %>%
filter(NHS !='Scotland')
mutate(NHS = sub("^NHS ","", NHS))
# There are no missing values
# I can go straight into selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
plot_data <- adp_data %>%
select('area_name','year','numerator') %>%
rename(percentage = 'numerator',NHS = 'area_name') %>%
filter(NHS !='Scotland') %>%
mutate(NHS = sub("^NHS ","", NHS))
head(plot_data)
?aggregate
?`string
?string
knitr::opts_chunk$set(echo = TRUE)
plot_data %>%
ggplot() +
geom_area(aes(x = year, y = percentage, colour = area_name))
# tidyverse includes dplyr and ggplot2 so I don't need to load them separately
library(tidyverse)
library(here)
plot_data %>%
plot_data %>%
ggplot() +
geom_area(aes(x = year, y = percentage, colour = area_name))
# There are no missing values
# This chunk is for selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
# The mutate line was suggested by chatgpt when I gave it the preceding lines in this chunk and asked it what to add to strip out the "NHS " prefix.
plot_data <- adp_data %>%
select('area_name','year','numerator') %>%
rename(percentage = 'numerator',NHS = 'area_name') %>%
filter(NHS !='Scotland') %>%
mutate(NHS = sub("^NHS ","", NHS))
knitr::opts_chunk$set(echo = TRUE)
# tidyverse includes dplyr and ggplot2 so I don't need to load them separately
library(tidyverse)
library(here)
#reading in the data:
adp_data <- read_csv(here("Inputs/timetrend_data.csv"))
glimpse(adp_data)
# There are no missing values
# This chunk is for selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
# The mutate line was suggested by chatgpt when I gave it the preceding lines in this chunk and asked it what to add to strip out the "NHS " prefix.
plot_data <- adp_data %>%
select('area_name','year','numerator') %>%
rename(percentage = 'numerator',NHS = 'area_name') %>%
filter(NHS !='Scotland') %>%
mutate(NHS = sub("^NHS ","", NHS))
head(plot_data)
plot_data %>%
plot_data %>%
ggplot() +
geom_area(aes(x = year, y = percentage, colour = area_name))
plot_data %>%
ggplot() +
geom_area(aes(x = year, y = percentage, colour = NHS))
# There are no missing values
# This chunk is for selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
# The mutate line was suggested by chatgpt when I gave it the preceding lines in this chunk and asked it what to add to strip out the "NHS " prefix.
plot_data <- adp_data %>%
select('area_name','year','numerator') %>%
rename(percentage = 'numerator',NHS-Board = 'area_name') %>%
# There are no missing values
# This chunk is for selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
# The mutate line was suggested by chatgpt when I gave it the preceding lines in this chunk and asked it what to add to strip out the "NHS " prefix.
plot_data <- adp_data %>%
select('area_name','year','numerator') %>%
rename(percentage = 'numerator',NHS-Board = 'area_name') %>%
# There are no missing values
# This chunk is for selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
# The mutate line was suggested by chatgpt when I gave it the preceding lines in this chunk and asked it what to add to strip out the "NHS " prefix.
plot_data <- adp_data %>%
select('area_name','year','numerator') %>%
rename(percentage = 'numerator',NHS= 'area_name') %>%
filter(NHS !='Scotland') %>%
mutate(NHS = sub("^NHS ","", NHS))
head(plot_data)
library(plyr)
# tidyverse includes dplyr and ggplot2 so I don't need to load them separately
library(tidyverse)
library(here)
install.packages(plyr)
# tidyverse includes dplyr and ggplot2 so I don't need to load them separately
library(tidyverse)
library(here)
# tidyverse includes dplyr and ggplot2 so I don't need to load them separately
library(tidyverse)
library(here)
library(tidyverse)
plot_data$Region
plot_data$Region -< 0
plot_data$Region <- 0
plot_data$Region <- if(plot_data$NHS %in% "Grampian", "Moray", North East)
plot_data$Region <- if(plot_data$NHS %in% "Grampian;, "Moray", North East)
plot_data$Region <- if(plot_data$NHS %in% "Grampian"; "Moray", North East)
plot_data$Region <- ifelse(plot_data$NHS %in% "Dumfries & Galloway", "Borders", borders)
mutate(Region = recode(NHS,
"Ayrshire & Arran" |
"Borders" |
"Dumfries & Galloway" |
"Fife" |
"Forth Valley" = "random"))
plot_data <- plot_data %>%
mutate(Region = recode(NHS, "Ayrshire & Arran" | "Borders" | "Dunmfries & Galloway" ~ "Borders"))
rlang::last_trace()
plot_data %>%
ggplot() +
geom_area(aes(x = year, y = percentage, colour = NHS))
plot_data <- plot_data %>%
mutate(Region = case_when(
NHS %in% c("Ayrshire & Arran" | "Borders" | "Dumfries & Galloway" | "Fife" | "Forth Valley") ~ "Borders",
NHS %in% c("Fife" | "Forth Valley" | "Greater Glasgow & Clyde" | "Lothian") ~ "Central Belt",
NHS %in% c("Grampian" | "Tayside") ~ "North East,
NSH %in% c("Highland" | "Western Isles" | "Orkney" | "Shetland") ~ "Highlands & Islands"))"
plot_data <- plot_data %>%
mutate(Region = case_when(
NHS %in% c("Ayrshire & Arran" , "Borders" , "Dumfries & Galloway" , "Fife" , "Forth Valley") ~ "Borders",
NHS %in% c("Fife" | "Forth Valley" | "Greater Glasgow & Clyde" | "Lothian") ~ "Central Belt",
NHS %in% c("Grampian" | "Tayside") ~ "North East,
NSH %in% c("Highland" | "Western Isles" | "Orkney" | "Shetland") ~ "Highlands & Islands"))"
plot_data <- plot_data %>%
mutate(Region = case_when(
NHS %in% c("Ayrshire & Arran" , "Borders" , "Dumfries & Galloway" , "Fife" , "Forth Valley") ~ "Borders",
NHS %in% c("Fife" | "Forth Valley" | "Greater Glasgow & Clyde" | "Lothian") ~ "Central Belt",
NHS %in% c("Grampian" | "Tayside") ~ "North East",
NSH %in% c("Highland" | "Western Isles" | "Orkney" | "Shetland") ~ "Highlands & Islands"))"
plot_data <- plot_data %>%
mutate(Region = case_when(
NHS %in% c("Ayrshire & Arran" , "Borders" , "Dumfries & Galloway", "Forth Valley") ~ "Borders",
NHS %in% c("Fife" , "Forth Valley" , "Greater Glasgow & Clyde" , "Lothian") ~ "Central Belt",
NHS %in% c("Grampian" , "Tayside") ~ "North East",
NSH %in% c("Highland" , "Western Isles" , "Orkney" , "Shetland") ~ "Highlands & Islands"))"
knitr::opts_chunk$set(echo = TRUE)
# tidyverse includes dplyr and ggplot2 so I don't need to load them separately
library(tidyverse)
library(here)
#reading in the data:
adp_data <- read_csv(here("Inputs/timetrend_data.csv"))
glimpse(adp_data)
# There are no missing values
# This chunk is for selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
# The mutate line was suggested by chatgpt when I gave it the preceding lines in this chunk and asked it what to add to strip out the "NHS " prefix.
plot_data <- adp_data %>%
select('area_name','year','numerator') %>%
rename(percentage = 'numerator',NHS= 'area_name') %>%
filter(NHS !='Scotland') %>%
mutate(NHS = sub("^NHS ","", NHS))
head(plot_data)
plot_data <- plot_data %>%
mutate(Region = case_when(
NHS %in% c("Ayrshire & Arran" , "Borders" , "Dumfries & Galloway", "Forth Valley") ~ "Borders",
NHS %in% c("Fife" , "Forth Valley" , "Greater Glasgow & Clyde" , "Lothian") ~ "Central Belt",
NHS %in% c("Grampian" , "Tayside") ~ "North East",
NSH %in% c("Highland" , "Western Isles" , "Orkney" , "Shetland") ~ "Highlands & Islands"))"
plot_data <- plot_data %>%
mutate(Region = case_when(
NHS %in% c("Ayrshire & Arran" , "Borders" , "Dumfries & Galloway", "Forth Valley") ~ "Borders",
NHS %in% c("Fife" , "Forth Valley" , "Greater Glasgow & Clyde" , "Lothian") ~ "Central Belt",
NHS %in% c("Grampian" , "Tayside") ~ "North East",
NHS %in% c("Highland" , "Western Isles" , "Orkney" , "Shetland") ~ "Highlands & Islands"))"
plot_data <- plot_data %>%
mutate(Region = case_when(
NHS %in% c("Ayrshire & Arran" , "Borders" , "Dumfries & Galloway", "Forth Valley") ~ "Borders",
NHS %in% c("Fife" , "Forth Valley" , "Greater Glasgow & Clyde" , "Lothian") ~ "Central Belt",
NHS %in% c("Grampian" , "Tayside") ~ "North East",
NHS %in% c("Highland" , "Western Isles" , "Orkney" , "Shetland") ~ "Highlands & Islands"))
plot_data %>%
ggplot() +
geom_area(aes(x = year, y = percentage, colour = Region))
plot_data$Region %>%  unique()
?latex
install.packages(tinytex)
install.packages("tinytex")
tinytex::install_tinytex()
tinytex(latex)
tinytex::check_installed()
install.packages("tinytex")
tinytex::install_tinytex()
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
# tidyverse includes dplyr and ggplot2 so I don't need to load them separately
library(tidyverse)
library(here)
t
#reading in the data:
adp_data <- read_csv(here("Inputs/timetrend_data.csv"))
glimpse(adp_data)
# There are no missing values
# This chunk is for selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
# The mutate line was suggested by chatgpt when I gave it the preceding lines in this chunk and asked it what to add to strip out the "NHS " prefix.
plot_data <- adp_data %>%
select('area_name','year','numerator') %>%
rename(percentage = 'numerator',NHS= 'area_name') %>%
filter(NHS !='Scotland') %>%
mutate(NHS = sub("^NHS ","", NHS))
head(plot_data)
#I wanted to use functions from the course but when I looked up how to recategorise a categorical variable, all the answers were using functions we hadn't used. So, I asked chatgpt. First, it advised a statement for each NHS Board but I knew it could be done in groups and using | or %in% so I modified the prompt.
plot_data <- plot_data %>%
mutate(Region = case_when(
NHS %in% c("Ayrshire & Arran" , "Borders" , "Dumfries & Galloway", "Forth Valley") ~ "Borders",
NHS %in% c("Fife" , "Forth Valley" , "Greater Glasgow & Clyde" , "Lothian") ~ "Central Belt",
NHS %in% c("Grampian" , "Tayside") ~ "North East",
NHS %in% c("Highland" , "Western Isles" , "Orkney" , "Shetland") ~ "Highlands & Islands"))
plot_data %>%
ggplot() +
geom_area(aes(x = year, y = percentage, colour = Region))
View(plot_data)
View(plot_data)
#I wanted to use functions from the course but when I looked up how to recategorise a categorical variable, all the answers were using functions we hadn't used. So, I asked chatgpt. First, it advised a statement for each NHS Board but I knew it could be done in groups and using | or %in% so I modified the prompt.
plot_data <- plot_data %>%
mutate(Region = case_when(
NHS %in% c("Ayrshire & Arran" , "Borders" , "Dumfries & Galloway") ~ "Borders",
NHS %in% c("Fife" , "Forth Valley" , "Greater Glasgow & Clyde" , "Lanarkshire" , "Lothian") ~ "Central Belt",
NHS %in% c("Grampian" , "Tayside") ~ "North East",
NHS %in% c("Highland" , "Western Isles" , "Orkney" , "Shetland") ~ "Highlands & Islands"))
plot_data %>%
ggplot() +
geom_area(aes(x = year, y = percentage, colour = Region))
# There are no missing values
# This chunk is for selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
# The mutate line was suggested by chatgpt when I gave it the preceding lines in this chunk and asked it what to add to strip out the "NHS " prefix.
plot_data <- adp_data %>%
select('area_name','year','measure') %>%
rename(percentage = 'measure',NHS= 'area_name') %>%
filter(NHS !='Scotland') %>%
mutate(NHS = sub("^NHS ","", NHS))
head(plot_data)
#I wanted to use functions from the course but when I looked up how to recategorise a categorical variable, all the answers were using functions we hadn't used. So, I asked chatgpt. First, it advised a statement for each NHS Board but I knew it could be done in groups and using | or %in% so I modified the prompt.
plot_data <- plot_data %>%
mutate(Region = case_when(
NHS %in% c("Ayrshire & Arran" , "Borders" , "Dumfries & Galloway") ~ "Borders",
NHS %in% c("Fife" , "Forth Valley" , "Greater Glasgow & Clyde" , "Lanarkshire" , "Lothian") ~ "Central Belt",
NHS %in% c("Grampian" , "Tayside") ~ "North East",
NHS %in% c("Highland" , "Western Isles" , "Orkney" , "Shetland") ~ "Highlands & Islands"))
plot_data %>%
ggplot() +
geom_area(aes(x = year, y = percentage, colour = Region))
#I wanted to use functions from the course but when I looked up how to recategorise a categorical variable, all the answers were using functions we hadn't used. So, I asked chatgpt. First, it advised a statement for each NHS Board but I knew it could be done in groups and using | or %in% so I modified the prompt.
plot_data <- plot_data %>%
mutate(Region = case_when(
NHS %in% c("Ayrshire & Arran" , "Borders" , "Dumfries & Galloway") ~ "Borders",
NHS %in% c("Fife" , "Forth Valley" , "Greater Glasgow & Clyde" , "Lanarkshire" , "Lothian") ~ "Central Belt",
NHS %in% c("Grampian" , "Tayside") ~ "North East",
NHS %in% c("Highland" , "Western Isles" , "Orkney" , "Shetland") ~ "Highlands & Islands"))
#Now to calculate the regional percentages
summed_data <- plot_data %>%
group_by(Region, year) %>%
summarise(total_percentage = sum(percentage))
summed_data %>%
ggplot() +
geom_area(aes(x = year, y = percentage, colour = Region))
summed_data %>%
ggplot() +
geom_area(aes(x = year, y = total_percentage, colour = Region))
# There are no missing values
# This chunk is for selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
# The mutate line was suggested by chatgpt when I gave it the preceding lines in this chunk and asked it what to add to strip out the "NHS " prefix.
plot_data <- adp_data %>%
select('area_name','year','numerator') %>%
rename(number = 'numerator',NHS= 'area_name') %>%
filter(NHS !='Scotland') %>%
mutate(NHS = sub("^NHS ","", NHS))
head(plot_data)
#I wanted to use functions from the course but when I looked up how to recategorise a categorical variable, all the answers were using functions we hadn't used. So, I asked chatgpt. First, it advised a statement for each NHS Board but I knew it could be done in groups and using | or %in% so I modified the prompt.
plot_data <- plot_data %>%
mutate(Region = case_when(
NHS %in% c("Ayrshire & Arran" , "Borders" , "Dumfries & Galloway") ~ "Borders",
NHS %in% c("Fife" , "Forth Valley" , "Greater Glasgow & Clyde" , "Lanarkshire" , "Lothian") ~ "Central Belt",
NHS %in% c("Grampian" , "Tayside") ~ "North East",
NHS %in% c("Highland" , "Western Isles" , "Orkney" , "Shetland") ~ "Highlands & Islands"))
#Now to calculate the regional percentages
summed_data <- plot_data %>%
group_by(Region, year) %>%
summarise(total_number = sum(number))
summed_data %>%
ggplot() +
geom_area(aes(x = year, y = total_number, colour = Region))
knitr::opts_chunk$set(echo = TRUE)
# tidyverse includes dplyr and ggplot2 so I don't need to load them separately
library(tidyverse)
library(here)
tinytex::check_installed()
# tidyverse includes dplyr and ggplot2 so I don't need to load them separately
library(tidyverse)
library(here)
library(tinytex)
r.version()
R.Version()
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex;;install.tinytex()
tinytex::install.tinytex()
tinytex::install_tinytex()
tinytex::uninstall_tinytex()
tinytex::check_installed()
library(tinytex)
install.packages(installr)
updateR()
knitr::opts_chunk$set(echo = TRUE)
# tidyverse includes dplyr and ggplot2 so I don't need to load them separately
library(tidyverse)
library(here)
library(tinytex)
#reading in the data:
adp_data <- read_csv(here("Inputs/timetrend_data.csv"))
glimpse(adp_data)
# There are no missing values
# This chunk is for selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
# The mutate line was suggested by chatgpt when I gave it the preceding lines in this chunk and asked it what to add to strip out the "NHS " prefix.
plot_data <- adp_data %>%
select('area_name','year','numerator') %>%
rename(number = 'numerator',NHS= 'area_name') %>%
filter(NHS !='Scotland') %>%
mutate(NHS = sub("^NHS ","", NHS))
head(plot_data)
#I wanted to use functions from the course but when I looked up how to recategorise a categorical variable, all the answers were using functions we hadn't used. So, I asked chatgpt. First, it advised a statement for each NHS Board but I knew it could be done in groups and using | or %in% so I modified the prompt.
plot_data <- plot_data %>%
mutate(Region = case_when(
NHS %in% c("Ayrshire & Arran" , "Borders" , "Dumfries & Galloway") ~ "Borders",
NHS %in% c("Fife" , "Forth Valley" , "Greater Glasgow & Clyde" , "Lanarkshire" , "Lothian") ~ "Central Belt",
NHS %in% c("Grampian" , "Tayside") ~ "North East",
NHS %in% c("Highland" , "Western Isles" , "Orkney" , "Shetland") ~ "Highlands & Islands"))
#Now to calculate the regional percentages
summed_data <- plot_data %>%
group_by(Region, year) %>%
summarise(total_number = sum(number))
summed_data %>%
ggplot() +
geom_area(aes(x = year, y = total_number, colour = Region))
tinytex::install_tinytex()
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
# tidyverse includes dplyr and ggplot2 so I don't need to load them separately
library(tidyverse)
library(here)
library(tinytex)
#reading in the data:
adp_data <- read_csv(here("Inputs/timetrend_data.csv"))
glimpse(adp_data)
# There are no missing values
# This chunk is for selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
# The mutate line was suggested by chatgpt when I gave it the preceding lines in this chunk and asked it what to add to strip out the "NHS " prefix.
plot_data <- adp_data %>%
select('area_name','year','numerator') %>%
rename(number = 'numerator',NHS= 'area_name') %>%
filter(NHS !='Scotland') %>%
mutate(NHS = sub("^NHS ","", NHS))
head(plot_data)
#I wanted to use functions from the course but when I looked up how to recategorise a categorical variable, all the answers were using functions we hadn't used. So, I asked chatgpt. First, it advised a statement for each NHS Board but I knew it could be done in groups and using | or %in% so I modified the prompt.
plot_data <- plot_data %>%
mutate(Region = case_when(
NHS %in% c("Ayrshire & Arran" , "Borders" , "Dumfries & Galloway") ~ "Borders",
NHS %in% c("Fife" , "Forth Valley" , "Greater Glasgow & Clyde" , "Lanarkshire" , "Lothian") ~ "Central Belt",
NHS %in% c("Grampian" , "Tayside") ~ "North East",
NHS %in% c("Highland" , "Western Isles" , "Orkney" , "Shetland") ~ "Highlands & Islands"))
#Now to calculate the regional percentages
summed_data <- plot_data %>%
group_by(Region, year) %>%
summarise(total_number = sum(number))
summed_data %>%
ggplot() +
geom_area(aes(x = year, y = total_number, colour = Region))
# tidyverse includes dplyr and ggplot2 so I don't need to load them separately
library(tidyverse)
library(here)
library(tinytex)
knitr::opts_chunk$set(echo = TRUE)
# tidyverse includes dplyr and ggplot2 so I don't need to load them separately
library(tidyverse)
library(here)
library(tinytex)
#reading in the data:
adp_data <- read_csv(here("Inputs/timetrend_data.csv"))
glimpse(adp_data)
# There are no missing values
# This chunk is for selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
# The mutate line was suggested by chatgpt when I gave it the preceding lines in this chunk and asked it what to add to strip out the "NHS " prefix.
plot_data <- adp_data %>%
select('area_name','year','numerator') %>%
rename(number = 'numerator',NHS= 'area_name') %>%
filter(NHS !='Scotland') %>%
mutate(NHS = sub("^NHS ","", NHS))
head(plot_data)
#I wanted to use functions from the course but when I looked up how to recategorise a categorical variable, all the answers were using functions we hadn't used. So, I asked chatgpt. First, it advised a statement for each NHS Board but I knew it could be done in groups and using | or %in% so I modified the prompt.
plot_data <- plot_data %>%
mutate(Region = case_when(
NHS %in% c("Ayrshire & Arran" , "Borders" , "Dumfries & Galloway") ~ "Borders",
NHS %in% c("Fife" , "Forth Valley" , "Greater Glasgow & Clyde" , "Lanarkshire" , "Lothian") ~ "Central Belt",
NHS %in% c("Grampian" , "Tayside") ~ "North East",
NHS %in% c("Highland" , "Western Isles" , "Orkney" , "Shetland") ~ "Highlands & Islands"))
#Now to calculate the regional percentages
summed_data <- plot_data %>%
group_by(Region, year) %>%
summarise(total_number = sum(number))
summed_data %>%
ggplot() +
geom_area(aes(x = year, y = total_number, colour = Region))
tinytex::install_tinytex()
summed_data %>%
ggplot() +
geom_area(aes(x = year, y = total_number, fill = Region))
library(bslib)
knitr::opts_chunk$set(echo = TRUE)
# tidyverse includes dplyr and ggplot2 so I don't need to load them separately
library(tidyverse)
library(here)
#reading in the data:
adp_data <- read_csv(here("Inputs/timetrend_data.csv"))
glimpse(adp_data)
# There are no missing values
# This chunk is for selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
# The mutate line was suggested by chatgpt when I gave it the preceding lines in this chunk and asked it what to add to strip out the "NHS " prefix.
plot_data <- adp_data %>%
select('area_name','year','numerator') %>%
rename(number = 'numerator',NHS= 'area_name') %>%
filter(NHS !='Scotland') %>%
mutate(NHS = sub("^NHS ","", NHS))
head(plot_data)
#I wanted to use functions from the course but when I looked up how to recategorise a categorical variable, all the answers were using functions we hadn't used. So, I asked chatgpt. First, it advised a statement for each NHS Board but I knew it could be done in groups and using | or %in% so I modified the prompt.
plot_data <- plot_data %>%
mutate(Region = case_when(
NHS %in% c("Ayrshire & Arran" , "Borders" , "Dumfries & Galloway") ~ "Borders",
NHS %in% c("Fife" , "Forth Valley" , "Greater Glasgow & Clyde" , "Lanarkshire" , "Lothian") ~ "Central Belt",
NHS %in% c("Grampian" , "Tayside") ~ "North East",
NHS %in% c("Highland" , "Western Isles" , "Orkney" , "Shetland") ~ "Highlands & Islands"))
#Now to calculate the regional percentages
summed_data <- plot_data %>%
group_by(Region, year) %>%
summarise(total_number = sum(number))
summed_data %>%
ggplot() +
geom_area(aes(x = year, y = total_number, fill = Region))
gc()
knitr::opts_chunk$set(echo = TRUE)
# tidyverse includes dplyr and ggplot2 so I don't need to load them separately
library(tidyverse)
library(here)
#reading in the data:
adp_data <- read_csv(here("Inputs/timetrend_data.csv"))
glimpse(adp_data)
# There are no missing values
# This chunk is for selecting and renaming columns, removing the rows for the whole of Scotland and removing the NHS prefix.
# The mutate line was suggested by chatgpt when I gave it the preceding lines in this chunk and asked it what to add to strip out the "NHS " prefix.
plot_data <- adp_data %>%
select('area_name','year','numerator') %>%
rename(number = 'numerator',NHS= 'area_name') %>%
filter(NHS !='Scotland') %>%
mutate(NHS = sub("^NHS ","", NHS))
head(plot_data)
#I wanted to use functions from the course but when I looked up how to recategorise a categorical variable, all the answers were using functions we hadn't used. So, I asked chatgpt. First, it advised a statement for each NHS Board but I knew it could be done in groups and using | or %in% so I modified the prompt.
plot_data <- plot_data %>%
mutate(Region = case_when(
NHS %in% c("Ayrshire & Arran" , "Borders" , "Dumfries & Galloway") ~ "Borders",
NHS %in% c("Fife" , "Forth Valley" , "Greater Glasgow & Clyde" , "Lanarkshire" , "Lothian") ~ "Central Belt",
NHS %in% c("Grampian" , "Tayside") ~ "North East",
NHS %in% c("Highland" , "Western Isles" , "Orkney" , "Shetland") ~ "Highlands & Islands"))
#Now to calculate the regional percentages
summed_data <- plot_data %>%
group_by(Region, year) %>%
summarise(total_number = sum(number))
summed_data %>%
ggplot() +
geom_area(aes(x = year, y = total_number, fill = Region))
options(scipen = 999)
summed_data %>%
ggplot() +
geom_area(aes(x = year, y = total_number, fill = Region))
options(scipen = 999)
summed_data %>%
ggplot() +
geom_area(aes(x = year, y = people, fill = Region))
#I wanted to use functions from the course but when I looked up how to recategorise a categorical variable, all the answers were using functions we hadn't used. So, I asked chatgpt. First, it advised a statement for each NHS Board but I knew it could be done in groups and using | or %in% so I modified the prompt.
plot_data <- plot_data %>%
mutate(Region = case_when(
NHS %in% c("Ayrshire & Arran" , "Borders" , "Dumfries & Galloway") ~ "Borders",
NHS %in% c("Fife" , "Forth Valley" , "Greater Glasgow & Clyde" , "Lanarkshire" , "Lothian") ~ "Central Belt",
NHS %in% c("Grampian" , "Tayside") ~ "North East",
NHS %in% c("Highland" , "Western Isles" , "Orkney" , "Shetland") ~ "Highlands & Islands"))
#Now to calculate the regional percentages
summed_data <- plot_data %>%
group_by(Region, year) %>%
summarise(people = sum(number))
options(scipen = 999)
summed_data %>%
ggplot() +
geom_area(aes(x = year, y = people, fill = Region))
